---
services:
  vpn:
    image: haugene/transmission-openvpn
    container_name: vpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - OPENVPN_PROVIDER=custom
      - OPENVPN_CONFIG=ca.protonvpn.udp
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - LOCAL_NETWORK=${IP_SUBNET}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PLEX}/protonvpn:/etc/openvpn/custom
      - ${PLEX}/vpn/config:/config
      - ${PLEX}/vpn/data:/data
    ports:
      - 9091:9091     # Transmission Web UI
      - 8112:8112     # Deluge Web UI
      - 6881:6881     # Deluge TCP port
      - 6881:6881/udp # Deluge UDP port
    restart: unless-stopped
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PLEX}/deluge/config:/config
      - ${PLEX}/data/torrents:/data/torrents
    network_mode: service:vpn
    depends_on:
      - vpn
    restart: unless-stopped
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
    volumes:
      - ${PLEX}/config:/config
      - ${PLEX}/data/media:/data/media
    restart: unless-stopped
  kometa:
    image: kometateam/kometa:nightly
    container_name: kometa
    environment:
      - TZ=${TZ}
      - KOMETA_RUN=false
      - KOMETA_TIMES=00:00,02:00,06:30,17:00,19:00,20:00
      - KOMETA_CONFIG=/config/config.yml
      - KOMETA_IPADDRESS=${IP_ADDRESS}
      - KOMETA_PLEXTOKEN=${PLEX_TOKEN}
      - KOMETA_TMDBKEY=${TMDB_API_KEY}
      - KOMETA_RADARRKEY=${RADARR_API_KEY}
    volumes:
      - ${PLEX}/kometa/config:/config
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PLEX}/radarr/data:/config
      - ${PLEX}/data:/data
    ports:
      - 7878:7878
    restart: unless-stopped
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PLEX}/sonarr/data:/config
      - ${PLEX}/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PLEX}/bazarr/data:/config
      - ${PLEX}/data:/data
    ports:
      - 6767:6767
    restart: unless-stopped
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${PLEX}/prowlarr/data:/config
    ports:
      - 9696:9696
    restart: unless-stopped
  byparr:
    container_name: byparr
    image: ghcr.io/thephaseless/byparr
    ports:
      - 8191:8191
    restart: unless-stopped
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - TZ="America/Toronto"
    ports:
      - 5055:5055
    volumes:
      - ${PLEX}/overseerr/data:/app/config
    restart: unless-stopped
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    volumes:
      - ${PLEX}/cloudflared:/etc/cloudflared
    restart: unless-stopped
  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    volumes:
      - ${PLEX}/tautulli/data:/config
    ports:
      - 8181:8181
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: unless-stopped
  ersatztv:
    image: jasongdove/ersatztv
    container_name: ersatztv
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - 8409:8409
    volumes:
      - ${PLEX}/ersatztv/data:/root/.local/share/ersatztv
      - ${PLEX}/data:/data:ro
    restart: unless-stopped
  ticketing:
    container_name: ticketing
    image: docker.io/alexbmoreira/plex-home-theatre:latest
    environment:
      - PLEX_TOKEN=${PLEX_TOKEN}
      - PLEX_URL=${PLEX_URL}
      - CLIENT_NAME=${CLIENT_NAME}
    ports:
      - 5067:5067
    restart: unless-stopped
  status:
    container_name: status
    build:
      context: ${PLEX}/status
      dockerfile: ${PLEX}/docker/Dockerfile.node
    network_mode: host
    ports:
      - 8080:8080
    volumes:
      - ${PLEX}/status:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PLEX}/docker/docker-compose.yml:/docker/docker-compose.yml:ro
    environment:
      - IP_ADDRESS=${IP_ADDRESS}
      - AUTH_HASH=${STATUS_AUTH_HASH}
      - AUTH_KEY=${STATUS_AUTH_KEY}
      - PLEX_TOKEN=${PLEX_TOKEN}
      - RADARR_API_KEY=${RADARR_API_KEY}
      - SONARR_API_KEY=${SONARR_API_KEY}
      - PROWLARR_API_KEY=${PROWLARR_API_KEY}
    restart: unless-stopped
  wizarr:
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr:latest
    ports:
      - 5690:5690
    volumes:
      - ${PLEX}/wizarr/database:/data/database
